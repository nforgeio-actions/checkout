#------------------------------------------------------------------------------
# Pulls the neonFORGE GitHub repos to a JOBRUNNER and copies any GitHub action
# files to [github.workspace]/actions/REPO.
# 
#
# This currently manages the following neonFORGE repos:
#
#   neonCLOUD           - private/enterprise code including deployment scripts
#   neonKUBE            - public neonKUBE related code
#   neonLIBRARY         - public neonLIBRARY related code
#   nforgeio.github.io  - public neonLIBRARY code documentation (doc.neonforge.com)
#   cadence-samples     - public Cadence sample apps
#   temporal-samples    - public Temporal sample apps

name: neon-pull-repos
description: Checks out the neonCLOUD, neonKUBE, and neonLIBRARY repos.
inputs:
  branch:
    description: Optionally specifies the branch or tag (defaults to "master")
    required: false
    default: master
runs:
  using: composite
  steps:
  - shell: pwsh
    run: |
      
      # Checks out the named repo, resetting it first to clear
      # any uncommitted changes.
      function Checkout
      {
          [CmdletBinding()]
          param (
              [Parameter(Position=0, Mandatory=1)]
              [string]$repoName
          )
          
          $repoPath          = "$env:NF_REPOS\$repoName"
          $repoActionsFolder = [System.IO.Path]::Combine($repoPath, ".github", "actions")
            
          Push-Location repoPath
          git reset --hard
          git checkout "$env:branch"
          Pop-Location
          
          # Remove the action directory for the repo and then
          # copy any action files from the checked out repo
          # into a new directory (when the repo has actions).
          
          $actionFolder = [System.IO.Path]::Combine("$repoPath", "actions", $repoName)
          
          if ([System.IO.Directory]::RemoveDirectory($actionFolder, $true))
          {
              Remove-Item -Path $actionFolder -Recures -Force
          }
          
          # Create the action directory and copy the action files
          # from the repo.
          
          if ([System.IO.Directory]::Exists($actionFolder))
          {
              [System.IO.Directory]::CreateDirectory($actionFolder)
              Copy-Item -Path "$repoActionsFolder/*" -Destination $repoActionsFolder -PassThru
          }
      }
        
      # Checkout the repos
        
      Checkout neonCLOUD
      Checkout neonKUBE
      Checkout neonLIBRARY
      Checkout nforgeio.github.io
      Checkout cadence-samples
      Checkout temporal-samples
