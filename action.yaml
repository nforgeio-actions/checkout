#------------------------------------------------------------------------------
# Checks out the neonFORGE GitHub repos to a JOBRUNNER within the [C:\src] directory.
#
# This currently manages the following neonFORGE repos:
#
#   neonCLOUD           - private/enterprise code including deployment scripts
#   neonKUBE            - public neonKUBE related code
#   neonLIBRARY         - public neonLIBRARY related code
#   nforgeio.github.io  - public neonLIBRARY code documentation (doc.neonforge.com)
#   cadence-samples     - public Cadence sample apps
#   temporal-samples    - public Temporal sample apps

name: neon-checkout
description: Checks out the neonFORGE repos.
inputs:
  branch:
    description: Optionally specifies the branch or tag (defaults to "master")
    required: false
    default: master
runs:
  using: composite
  steps:
  - name: checkout-all
    shell: pwsh
    run: |
    
      # Verify that we're running on a properly configured neonFORGE jobrunner 
      # and import the deployment and action scripts from neonCLOUD.
      
      # NOTE: This assumes that the required [$NC_ROOT/Powershell/*.ps1] files
      #       in the current clone of the repo on the runner are up-to-date
      #       enough to be able to obtain secrets and use GitHub Action functions.
      #       If this is not the case, you'll have to manually pull the repo 
      #       first on the runner.
      
      $ncRoot = $env:NC_ROOT
      
      if (![System.IO.Directory]::Exists($ncRoot))
      {
          throw "Runner Config: neonCLOUD repo is not present."
      }
      
      $ncPowershell = [System.IO.Path]::Combine($ncRoot, "Powershell")
      
      Push-Location $ncPowershell
      . ./includes.ps1
      Pop-Location
      
      # Checks out the named repo, resetting it first to clear
      # any uncommitted changes.
      function Checkout
      {
          [CmdletBinding()]
          param (
              [Parameter(Position=0, Mandatory=1)]
              [string]$repoName
          )
          
          $repoPath = "$env:NF_REPOS\$repoName"
          
          Write-Output ""
          Write-Output "Checkout: $repoPath"
            
          Push-Location $repoPath
          
          git reset --hard
          git checkout "$env:branch"
          
          Pop-Location
      }
        
      # Checkout the repos
        
      Checkout neonCLOUD
      Checkout neonKUBE
      Checkout neonLIBRARY
      Checkout nforgeio.github.io
      Checkout cadence-samples
      Checkout temporal-samples
